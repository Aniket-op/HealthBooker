{"version":3,"file":"static/js/564.b8af95c5.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/Footer.jsx","components/Navbar.jsx","pages/Appointments.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport \"../styles/footer.css\";\r\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <div className=\"footer\">\r\n          <div className=\"footer-links\">\r\n            <h3>Links</h3>\r\n            <ul>\r\n              <li>\r\n                <NavLink to={\"/\"}>Home</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"social\">\r\n            <h3>Social links</h3>\r\n            <ul>\r\n              <li className=\"facebook\">\r\n                <a\r\n                  href=\"https://www.facebook.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaFacebookF />\r\n                </a>\r\n              </li>\r\n              <li className=\"youtube\">\r\n                <a\r\n                  href=\"https://www.youtube.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaYoutube />\r\n                </a>\r\n              </li>\r\n              <li className=\"instagram\">\r\n                <a\r\n                  href=\"https://www.instagram.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaInstagram />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-bottom\">\r\n          Made by{\" \"}\r\n          <a\r\n            href=\"https://www.linkedin.com/in/dunna-avinash\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Avinash\r\n          </a>{\" \"}\r\n          Â© {new Date().getFullYear()}\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/navbar.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Navbar = () => {\r\n  const [iconActive, setIconActive] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const [user, setUser] = useState(\r\n    localStorage.getItem(\"token\")\r\n      ? jwt_decode(localStorage.getItem(\"token\"))\r\n      : \"\"\r\n  );\r\n\r\n  const logoutFunc = () => {\r\n    dispatch(setUserInfo({}));\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <nav className={iconActive ? \"nav-active\" : \"\"}>\r\n        <h2 className=\"nav-logo\">\r\n          <NavLink to={\"/\"}>HealthBooker</NavLink>\r\n        </h2>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <NavLink to={\"/\"}>Home</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n          </li>\r\n          {token && user.isAdmin && (\r\n            <li>\r\n              <NavLink to={\"/dashboard/users\"}>Dashboard</NavLink>\r\n            </li>\r\n          )}\r\n          {token && !user.isAdmin && (\r\n            <>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/applyfordoctor\"}>Apply for doctor</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!token ? (\r\n            <>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/login\"}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/register\"}\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li>\r\n              <span\r\n                className=\"btn\"\r\n                onClick={logoutFunc}\r\n              >\r\n                Logout\r\n              </span>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n      <div className=\"menu-icons\">\r\n        {!iconActive && (\r\n          <FiMenu\r\n            className=\"menu-open\"\r\n            onClick={() => {\r\n              setIconActive(true);\r\n            }}\r\n          />\r\n        )}\r\n        {iconActive && (\r\n          <RxCross1\r\n            className=\"menu-close\"\r\n            onClick={() => {\r\n              setIconActive(false);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Empty from \"../components/Empty\";\r\nimport Footer from \"../components/Footer\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport Loading from \"../components/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport \"../styles/user.css\";\r\n\r\nconst Appointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  const { userId } = jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n  const getAllAppoint = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(\r\n        `/appointment/getallappointments?search=${userId}`\r\n      );\r\n      setAppointments(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllAppoint();\r\n  }, []);\r\n\r\n  const complete = async (ele) => {\r\n    try {\r\n      await toast.promise(\r\n        axios.put(\r\n          \"/appointment/completed\",\r\n          {\r\n            appointid: ele?._id,\r\n            doctorId: ele?.doctorId?._id,\r\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Appointment booked successfully\",\r\n          error: \"Unable to book appointment\",\r\n          loading: \"Booking appointment...\",\r\n        }\r\n      );\r\n\r\n      getAllAppoint();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"container notif-section\">\r\n          <h2 className=\"page-heading\">Your Appointments</h2>\r\n\r\n          {appointments.length > 0 ? (\r\n            <div className=\"appointments\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Doctor</th>\r\n                    <th>Patient</th>\r\n                    <th>Appointment Date</th>\r\n                    <th>Appointment Time</th>\r\n                    <th>Booking Date</th>\r\n                    <th>Booking Time</th>\r\n                    <th>Status</th>\r\n                    {userId === appointments[0].doctorId?._id ? (\r\n                      <th>Action</th>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appointments?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          {ele?.doctorId?.firstname +\r\n                            \" \" +\r\n                            ele?.doctorId?.lastname}\r\n                        </td>\r\n                        <td>\r\n                          {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\r\n                        </td>\r\n                        <td>{ele?.date}</td>\r\n                        <td>{ele?.time}</td>\r\n                        <td>{ele?.createdAt.split(\"T\")[0]}</td>\r\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\r\n                        <td>{ele?.status}</td>\r\n                        {userId === ele?.doctorId?._id ? (\r\n                          <td>\r\n                            <button\r\n                              className={`btn user-btn accept-btn ${\r\n                                ele?.status === \"Completed\" ? \"disable-btn\" : \"\"\r\n                              }`}\r\n                              disabled={ele?.status === \"Completed\"}\r\n                              onClick={() => complete(ele)}\r\n                            >\r\n                              Complete\r\n                            </button>\r\n                          </td>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\nexport default Appointments;\r\n"],"names":["className","to","href","target","rel","Date","getFullYear","iconActive","setIconActive","useState","dispatch","useDispatch","navigate","useNavigate","token","setToken","localStorage","getItem","user","setUser","jwt_decode","isAdmin","onClick","setUserInfo","removeItem","appointments","setAppointments","loading","useSelector","state","root","userId","getAllAppoint","async","setLoading","temp","fetchData","error","useEffect","length","doctorId","_id","map","ele","i","firstname","lastname","date","time","createdAt","split","updatedAt","status","disabled","toast","axios","appointid","doctorname","headers","Authorization","success","complete"],"sourceRoot":""}